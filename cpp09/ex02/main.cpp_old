/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: shmimi <shmimi@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/09/21 19:27:20 by shmimi            #+#    #+#             */
/*   Updated: 2024/09/21 22:47:25 by shmimi           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "PmergeMe.hpp"

void print_nums(const std::vector<int>& nums)
{
    for (size_t i = 0; i < nums.size(); i++)
        std::cout << nums[i] << std::endl;
}

void sort_pairs(std::vector<std::pair<int, int> >& pairs)
{
    for (size_t i = 0; i < pairs.size(); i++)
    {
        if (pairs[i].second == -1)
            break;
        if (pairs[i].first > pairs[i].second)
        {
            int tmp = pairs[i].first;
            pairs[i].first = pairs[i].second;
            pairs[i].second = tmp;
        }
    }
    for (size_t i = 0; i < pairs.size(); i++)
    {
        std::cout << pairs[i].first << "=>" << pairs[i].second << std::endl;
    }
}

std::vector<std::pair<int, int> > make_pairs(const std::vector<int>& nums)
{
    std::vector<std::pair<int, int> > pairs;
    size_t count = 0;
    size_t i = 0;
    while (i < nums.size())
    {
        if (i == nums.size() - 1)
        {
            std::pair<int, int> pair = std::make_pair(nums[count], -1);
            pairs.push_back(pair);
            break;
        }
        else
        {
            std::pair<int, int> pair = std::make_pair(nums[count], nums[count + 1]);
            pairs.push_back(pair);
        }
        i += 2;
        count = i;
    }
    
    for (size_t i = 0; i < pairs.size(); i++)
    {
        std::cout << pairs[i].first << "=>" << pairs[i].second << std::endl;
    }
    return pairs;
}

int main(int ac, char **av)
{
    if (ac == 1)
    {
        std::cerr << "Error" << std::endl;
        return 1;
    }
    std::vector<int> numbers;
    int i = 1;
    while(av[i])
    {
        numbers.push_back(std::atoi(av[i]));
        i++;
    }
    // print_nums(numbers);
    std::vector<std::pair<int, int> > pairs = make_pairs(numbers);
    std::cout << "****Sorted****\n";
    sort_pairs(pairs);
}